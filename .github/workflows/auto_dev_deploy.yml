name: Deploy to lower environments!!
on:
  push:
    branches:
      - develop

jobs:

  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - name: Checkout branch
        uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Upgrade NPM
        run: npm install -g npm

      - name: Install dependencies
        run: |
          npm ci
          npm run packages:install

      - name: create CLIENT_VERSION and RELEASE [DEV]
        run: |
          git_hash=$(git rev-parse --short "$GITHUB_SHA")
          timestamp=$(date +'%Y-%m-%d')
          timestamp2=$(date +'%Y%m%d')
          
          var=$(cat packages/order-fulfillment/wrangler.toml | grep -A 12 'env.dev.vars' | grep CLIENT_VERSION)
          sed -i -e "/env.dev.vars/,// s/$var/CLIENT_VERSION = \"$git_hash-${timestamp}\"/" packages/order-fulfillment/wrangler.toml
          
          var=$(cat packages/order-fulfillment/wrangler.toml | grep -A 12 'env.dev.vars' | grep RELEASE)
          sed -i -e "/env.dev.vars/,// s/$var/RELEASE = \"${timestamp2}\"/" packages/order-fulfillment/wrangler.toml

      - name: Deploy to Cloudflare workers [DEV]
        if: github.ref == 'refs/heads/develop'
        run: npm run packages:publish:dev
        env:
          CF_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
          CF_API_TOKEN: ${{ secrets.CF_API_TOKEN }}

  push-version-wiki:
    runs-on: ubuntu-latest
    needs: build
    env:
      GITHUB_TOKEN: ${{ secrets.github_token }}
      
    steps:
            
      - name: checkout repo
        uses: actions/checkout@v3
        with:
          repository: ${{github.repository}}.wiki

      - name: generate the version number
        run: |
            ls -al
            echo "Env Name: ${{ needs.deploy-dev.outputs.output1 }}"
            git_hash=$(git rev-parse --short "$GITHUB_SHA")
            timestamp=$(date +'%Y-%m-%d')
            var=$(cat Home.textile | grep DEV | cut -d":" -f2)
            sed -i -e "s/$var/\ $git_hash-${timestamp}/g" Home.textile
            cat Home.textile
      
       
      - name: Commit files
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          git commit -m "Add changes"
          git push

 
